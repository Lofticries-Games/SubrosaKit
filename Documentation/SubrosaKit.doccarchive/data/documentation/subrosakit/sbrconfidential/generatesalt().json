{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"generateSalt","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":"?"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Noise as data.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Used only for the EdDSA algorithm."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","code":["let eddsa = SBRConfidential(with: .eddsa(hashValue: .bits512, keySize: .bits256))","","Task {","    let salt = await eddsa.generateSalt()","}"],"syntax":null},{"name":"Authors","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Dmitry Novikov Â· Lofticries Games","type":"text"}]}],"type":"aside"},{"type":"aside","content":[{"inlineContent":[{"text":"None","type":"text"}],"type":"paragraph"}],"style":"note","name":"Bug"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/subrosakit\/sbrconfidential\/generatesalt()"]}],"metadata":{"role":"symbol","extendedModule":"SubrosaKit","title":"generateSalt()","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"generateSalt","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"modules":[{"name":"SubrosaKit"}],"externalID":"s:10SubrosaKit15SBRConfidentialC12generateSalt10Foundation4DataVSgyYaF"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SubrosaKit\/documentation\/SubrosaKit","doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential","doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential\/SBRSaltGeneratable-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential\/generateSalt()"},"abstract":[{"type":"text","text":"A method to generate noise."}],"references":{"doc://SubrosaKit/documentation/SubrosaKit/SBRConfidential/SBRSaltGeneratable-Implementations":{"url":"\/documentation\/subrosakit\/sbrconfidential\/sbrsaltgeneratable-implementations","kind":"article","type":"topic","identifier":"doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential\/SBRSaltGeneratable-Implementations","role":"collectionGroup","abstract":[],"title":"SBRSaltGeneratable Implementations"},"doc://SubrosaKit/documentation/SubrosaKit/SBRConfidential/generateSalt()":{"type":"topic","title":"generateSalt()","identifier":"doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential\/generateSalt()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"generateSalt","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/subrosakit\/sbrconfidential\/generatesalt()","role":"symbol","abstract":[{"type":"text","text":"A method to generate noise."}]},"doc://SubrosaKit/documentation/SubrosaKit":{"title":"SubrosaKit","identifier":"doc:\/\/SubrosaKit\/documentation\/SubrosaKit","url":"\/documentation\/subrosakit","kind":"symbol","type":"topic","abstract":[{"text":"SubrosaKit is a simple and easy way to start encrypting data in your app.","type":"text"}],"role":"collection"},"doc://SubrosaKit/documentation/SubrosaKit/SBRConfidential":{"abstract":[{"text":"A class that implements a set of functionality for encryption and decryption with an available set of encryption algorithms.","type":"text"}],"type":"topic","kind":"symbol","title":"SBRConfidential","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SBRConfidential","kind":"identifier"}],"navigatorTitle":[{"text":"SBRConfidential","kind":"identifier"}],"identifier":"doc:\/\/SubrosaKit\/documentation\/SubrosaKit\/SBRConfidential","url":"\/documentation\/subrosakit\/sbrconfidential","role":"symbol"}}}